/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) 
    {
       ListNode*fast=head;
       ListNode*slow=head;
        if(head==NULL)
             return NULL;
        if(head->next==NULL)
             return 0;
        
       do
       {
           fast=fast->next;
           if(fast)
               fast=fast->next;
           slow=slow->next;
       }
        while(fast!=NULL &&fast!=slow);
      if(fast==slow)
      {
          return 1;
      }
        return 0;
    }
};
